//
//  main.m
//  333
//
//  Created by 管复生 on 16/1/8.
//  Copyright © 2016年 GFS. All rights reserved.
//

#import <Foundation/Foundation.h>




int arr[] = {4, -7, 3, -2, -6, 14, -11, 14, -7, -3, 2, 8, -15, 7, 0, 9, -18, 11, 7, -1, -2, 0, -1, -15, 1, 11, -10, 17, -2, -4, -5, -7, 18, -20, 20, -7, 1, 1, 3, -9, 1, -2, -6, 10, 1, -6, 3, -1, -3, -5, 8, 8, 1, -18, 11, -7, 1, 15, -7, -11, 4, 1, 6, 1, -4, -5, 2, 0, 11, -18, 16, -2, 1, -4, -7, 1, 5, 2, 0, 8, -5, -8, 10, -4, 7, -17, 10, 4, -6, -8, 13, -13, 14, 3, -2, 2, -15, -4, 19, -3, 0, -15, 0, 6, -3, 6, 6, -17, 16, 3, -14, 8, -3, 3, -4, -7, -1, 13, -3, 1, -10, 4, -4, 10, -10, 10, -2, -7, 5, -7, 1, 18, -9, -11, 15, -1, -7, -1, 1, 4, -5, 8, -9, -3, 4, 5, -8, 9, -2, -3, -4, 11, -1, -1, 7, -19, 16, -16, 15, -15, 10, 5, -12, 4, 6, -8, -3, 9, -6, 3, -8, 1, 9, -10, 18, -11, 4, 2, -12, 6, 11, -3, -13, 10, -12, 19, -14, -2, 3, 7, -13, 19, -19, 5, 6, 6, -3, 6, -2, -17, 6, -1, 11, -5, 1, 7, -15, 12, 0, -3, -12, -2, 17, -11, 9, -11, 15, -15, 2, 0, 3, 9, -3, 5, -6, 0, -6, 0, 2, -9, 18, -2, -6, 0, -3, 0, -7, 7, -4, 10, -11, 1, 10, -8, 10, -11, 8, -9, 8, -10, 8, -8, 17, -11, -1, -2, 14, -12, 4, 9, -18, 12, -5, -5, 8, -6, 6, 6, -8, 8, -6, -10, 13, -13, 11, -2, -2, 9, -4, -1, 2, -15, 2, 14, 1, -5, -6, -5, 9, -4, 1, -3, 11, -1, 6, -15, 7, 8, -14, 11, -8, -3, 13, 1, 0, -6, -13, 2, 11, -14, 14, 5, -14, 5, 6, -14, 3, -3, 9, 7, -6, -3, 7, -16, 5, 11, -11, 2, 13, -9, -8, -3, 6, 7, 2, -3, 0, -3, -6, 12, -12, 13, -13, 12, 1, -11, -3, 8, 3, -5, 12, -2, -13, -3, -1, 2, 16, -3, 3, -1, -16, 8, 8, -18, 1, 13, -9, 6, 6, -4, -1, 8, -10, 7, -2, -5, 4, 3, -17, 18, -15, 3, 7, 1, -1, -8, 2, 0, 13, -2, -5, -8, 11, -7, -8, 6, 4, 1, 4, -2, 0, 1, -7, 8, -5, -8, 1, -2, 2, -1, 6, -4, 7, -10, 1, 7, 1, -6, -2, 15, -4, -12, 0, 8, 3, 6, -8, 0, -1, -3, -7, 4, 5, 3, -11, 13, -2, 0, -3, -5, 2, 0, 0, -5, 1, 9, 0, 6, -2, 1, 0, -15, 11, 5, 1, 0, -17, 15, -4, -8, 1, -2, 5, 6, -9, 2, 13, -14, 3, 6, -10, 8, 2, 2, 0, -2, -1, -1, 0, -12, 14, -7, 10, -14, 11, -2, -5, 2, 7, -6, 0, -7, 8, -11, 4, 11, -2, 4, -6, 5};
void ZeroXuLie(int a[], int size) {
    if (size<=0)
        perror("empty array");
    int sum = 0;
    //符合的数列
    int b = 0;
    printf("-----------\n");
    for (int cur=0;cur<size;cur++)
    {
        
        sum=0;
        int i = cur ;
        for (int j=cur;j<size;j++)
        {
            sum += a[j];
            if (sum==0)
            {
                 b++;
                while (i<=j)
                {
                    printf("%d ",a[i]);
                    i++;
                }
                printf("\n----------\n");
               
            }
            
        }
        
    }
    printf("符合的序列总数 = %d",b);
}
int main(int argc, const char * argv[]) {
    @autoreleasepool {
        
        ZeroXuLie(arr,sizeof(arr)* 0.25);
        
        printf("\n");
        printf("数组总数%ld",sizeof(arr));
    }
    return 0;
}